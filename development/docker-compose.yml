services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      ELASTIC_PASSWORD: ${ES_PASS}
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - es_data:/usr/share/elasticsearch/data
    restart: unless-stopped
  visit_sched:
    container_name: visit_sched
    build:
      context: ${VISIT_SCHED_PATH}  # change .env to path to visit_sched repo
      target: dev
    image: visit-scheduler:dev
    ports:
      - 8080:8080
    depends_on:
      - elasticsearch
    env_file: .env
    volumes:
      - ${VISIT_SCHED_PATH}//visit_scheduler:/app/visit_scheduler
  firestore_emulator:
    image: mtlynch/firestore-emulator
    environment:
      - FIRESTORE_PROJECT_ID=${FIRESTORE_PROJECT_ID}
      - PORT=${FIRESTORE_EMULATOR_PORT}
    ports:
      - ${FIRESTORE_EMULATOR_PORT}:${FIRESTORE_EMULATOR_PORT}
  user_chat:
    container_name: user_chat
    build:
      context: ${USER_CHAT_PATH}  # change .env to path to visit_sched repo
      target: dev
    image: user-chat:dev
    ports:
      - 8081:8081
    depends_on:
      - firestore_emulator
    environment:
      - FIRESTORE_EMULATOR_HOST=${FIRESTORE_EMULATOR_HOST}:${FIRESTORE_EMULATOR_PORT}
    volumes:
      - ${USER_CHAT_PATH}//user_chat:/app/user_chat
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
  visit_manager:
    container_name: visit_manager
    build:
      context: ${VISIT_MANAGER_PATH}  # change .env to path to visit_sched repo
      target: dev
    image: visit-manager:dev
    ports:
      - 8082:8082
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ${VISIT_MANAGER_PATH}//visit_manager:/app/visit_manager
  frontend:
    container_name: frontend
    build:
      context: ${FRONTEND_PATH}  # change .env to path to visit_sched repo
    ports:
      - 3000:3000
  
volumes:
  es_data:
    driver: local
  postgres_data:
    driver: local